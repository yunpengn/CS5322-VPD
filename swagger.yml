##################################################
#               General Information              #
##################################################
openapi: 3.0.0
info:
  title: CS5322 Project 1
  description: OAS 3.0 specifications for backend API endpoints that empower our project in CS5322 Database Security.
  termsOfService: http://www.nus.edu.sg
  contact:
    name: CS5322 Project Team
    email: neilniuyunpeng@gmail.com
  license:
    name: Copyright Â© CS5322 Project
    url: http://www.nus.edu.sg/legal-information-notices
  version: 1.0.0
  
externalDocs:
  url: https://www.nus.edu.sg/

servers:
  - url: https://api.cs5322.org
    description: Production server
  - url: https://stg-api.cs5322.org
    description: Staging server
  - url: http://localhost:8080
    description: Development server

security:
  - jwt-token: []

##################################################
#                    Endpoints                   #
##################################################
paths:
  /appointment:
    post:
      summary: Makes a new appointment
      description: This endpoint allows a receptionist to help a given patient make an appointment.
      tags:
        - Appointment
      requestBody:
        description: Request body for appointment create endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateRequest'
        required: true
      responses:
        200:
          description: A new appointment has been created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentCreateResponse'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        401:
          $ref: '#/components/responses/MissingCredentialError'
        500:
          $ref: '#/components/responses/UnknownServerError'
    
    put:
      summary: Updates an existing appointment
      description: This endpoint allows a receptionit to update a previously created appointment.
      tags:
        - Appointment
      requestBody:
        description: Request body for appointment update endpoint.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdateRequest'
        required: true
      responses:
        200:
          description: A new appointment has been updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentUpdateResponse'
        400:
          $ref: '#/components/responses/InvalidRequestError'
        401:
          $ref: '#/components/responses/MissingCredentialError'
        500:
          $ref: '#/components/responses/UnknownServerError'
    

##################################################
#                  Components                    #
##################################################
components:
  schemas:
    AppointmentCreateRequest:
      type: object
      properties:
        patientID:
          type: number
          format: int64
        doctorID:
          type: number
          format: int64
        time:
          type: string
          format: datetime
      required:
        - patientID
        - doctorID
        - time
      example:
        patientID: 112
        doctorID: 45
        time: 2020-08-11 14:54
    
    AppointmentCreateResponse:
      type: object
      properties:
        appointmentID:
          type: number
          format: int64
      example:
        appointmentID: 9845
    
    AppointmentUpdateRequest:
      type: object
      properties:
        appointmentID:
          type: number
          format: int64
        doctorID:
          type: number
          format: int64
        time:
          type: string
          format: datetime
      required:
        - appointmentID
        - doctorID
        - time
      example:
        appointmentID: 2894
        doctorID: 45
        time: 2020-08-11 14:54
    
    AppointmentUpdateResponse:
      type: object
      properties:
        appointmentID:
          type: number
          format: int64
      example:
        appointmentID: 9845

  responses:
    InvalidRequestError:
      description: The provided request parameter(s) and/or body is invalid.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              reasons:
                type: array
                items:
                  type: string
            required:
              - reasons
            example:
              errCode: C002
              reasons:
                - Invalid parameter provided
    
    MissingCredentialError:
      description: The request could not be completed because authentication token is missing.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              reasons:
                type: array
                items:
                  type: string
            required:
              - reasons
            example:
              errCode: C003
              reasons:
                - Missing auth token

    NoPermissionError:
      description: The request could not be completed due to a missing permission scope.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              reasons:
                type: array
                items:
                  type: string
            required:
              - reasons
            example:
              errCode: C004
              reasons:
                - No permission scope

    UnknownServerError:
      description: The server is unable to serve the request at the moment. Please try again later.
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              reasons:
                type: array
                items:
                  type: string
            required:
              - reasons
            example:
              errCode: S001
              reasons:
                - Unknown server error
  
  securitySchemes:
    jwt-token:
      type: http
      description: A JWT token must be present in the authorization header to pass this security scheme.
      scheme: bearer
      bearerFormat: JWT
